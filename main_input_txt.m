clear all;

%% Add function file path
addpath('funcFile');
addpath('grid');

%% Global variable setting
GRID_NUM = 200;                                                            % Number of COMSOL meshes

DIELECTRIC_VALUES = 8.855e-12;                                             % Dielectric constant
Efull = 3.4;                                                               % Dielectric Constant of Full Tube
Eempty = 1;                                                                % Dielectric Constant of Empty Tube
Eglass = 3.4;                                                              % Dielectric Constant of Quartz Glass Pipe
Eout = 1;                                                                  % Dielectric constant of shielding layer
BigNum= 1e10;

nodeinf = 'GridElec8Node32Image1054.xlsx';
[gridIndex, NumImageElem] = grid_meshing(nodeinf); 

%% Generate flow pattern loop sequence
nflow = 12;                                                                % the number of flow patterns generated
ratioOfRandom = 1;                                                         % The ratio of random flow pattern to typical 
                                                                           % flow pattern 
                                                                           
flowPatternSequence = generateFlow(nflow, ratioOfRandom);                  % Generate flow sequence
                                                                           % Laminar_flow: 3
                                                                           % Full_ring: 4
                                                                           % Center_ring: 5
                                                                           % Eccentric_ring: 6
                                                                           % Central_flow: 7
                                                                           % Eccentric_flow: 8
                                                                           % Any_core_stream: 9
                                                                           % Random flow pattern:10
                                                                           % A set of random flow patterns includes two flow 
                                                                           % patterns, one of which is a randomly generated flow 
                                                                           % pattern, and the other is a complementary flow 
                                                                           % pattern of the random flow pattern


%% Generate flow pattern txt file

txtFileNameNumber = 1;                                                     % txt file name number

flowPattern = {'Empty_pipe', ...                                           % Flow type
               'Filled_pipe', ...
               'Laminar_flow', ...              
               'Full_ring',  ...              
               'Center_ring', ...
               'Eccentric_ring', ...
               'Central_flow',  ...
               'Eccentric_flow', ...
               'Any_core_stream', ...
               'Random_flow_pattern'};
   
flowData = repmat(struct('data_in', []), ...                               % Storage array initialization
                  nflow * ceil((1 + ratioOfRandom ...
                  / (ratioOfRandom + 1))), 1);

for i = 1:1:size(flowPatternSequence, 2)

    fileName = [num2str(txtFileNameNumber), ...                            % Txt file name generated by splicing
                '_', ...
                flowPattern{flowPatternSequence(i)}, ...
                '.txt'];

    [matrix, feature] = Generate_flowpattern(flowPatternSequence(i), ...
                                             fileName, GRID_NUM, ...
                                             Eempty, Efull);               % Generate flow pattern concentration distribution 
                                                                           % matrix
    if flowPatternSequence(i) ~= 10                                        % Typical flow pattern                         
        imageArray = fill_grid(matrix, gridIndex, NumImageElem);
        flowData(txtFileNameNumber).data_in = imageArray;
        flowData(txtFileNameNumber).name = feature;
        txtFileNameNumber = txtFileNameNumber + 1;
    elseif flow(i) == 10                                                   % Random flow pattern
        imageArray = fill_grid(matrix{1}, gridIndex, NumImageElem);        % Native random flow pattern
        flowData(txtFileNameNumber).data_in = imageArray;
        flowData(txtFileNameNumber).name = feature;
        txtFileNameNumber = txtFileNameNumber + 1;
        
        imageArray = fill_grid(matrix{2}, gridIndex, NumImageElem);        % Complementary random flow pattern
        flowData(txtFileNameNumber).data_in = imageArray;
        flowData(txtFileNameNumber).name = feature;
        txtFileNameNumber = txtFileNameNumber + 1;
    else
        disp('Generate stream sequence error');
    end
    
    disp(i)                                                                % Monitor the progress of the program
end
save('.\data_mat_flow\flowData.mat', 'flowData');

